# $Id$

if( NOT VISTA_HWARCH )
	if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET( VISTA_64BIT TRUE )
	else( CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET( VISTA_64BIT FALSE )
	endif( CMAKE_SIZEOF_VOID_P EQUAL 8 )

	if( WIN32 )
		if( VISTA_64BIT )
			set( VISTA_HWARCH "win32-x64" )
		else( VISTA_64BIT )
			set( VISTA_HWARCH "win32" )
		endif( VISTA_64BIT )
		
		set( VISTA_COMPATIBLE_HWARCH ${VISTA_HWARCH} )
		
		if( MSVC )
			if( MSVC80 )
				set( VISTA_HWARCH "${VISTA_HWARCH}.vc8" )
			elseif( MSVC90 )
				set( VISTA_HWARCH "${VISTA_HWARCH}.vc9" )
			elseif( MSVC10 )
				set( VISTA_HWARCH "${VISTA_HWARCH}.vc10" )
			else( MSVC80 )
				message( WARNING "VistaCommon - Unknown MSVC version" )
				set( VISTA_HWARCH "${VISTA_HWARCH}.vc" )
			endif( MSVC80 )
		else( MSVC )
			message( WARNING "VistaCommon - using WIN32 without Visual Studio - this will probably fail - use at your own risk!" )
		endif( MSVC )
		
		set( VISTA_COMPATIBLE_HWARCH ${VISTA_HWARCH} ${VISTA_COMPATIBLE_HWARCH} )
		
	elseif( APPLE )
		set( VISTA_HWARCH "DARWIN" )
		set( VISTA_COMPATIBLE_HWARCH "DARWIN" )
	elseif( UNIX )
		if( VISTA_64BIT )
			set( VISTA_HWARCH "LINUX.X86_64" )
		else( VISTA_64BIT )
			set( VISTA_HWARCH "LINUX.X86" )
		endif( VISTA_64BIT )
		set( VISTA_COMPATIBLE_HWARCH ${VISTA_HWARCH} "LINUX" )
	else( WIN32 )
		message( WARNING "VistaHWarchSettings - Unsupported hardware architecture - use at your own risk!" )
		set( VISTA_HWARCH "UNKOWN_ARCHITECTURE" )
	endif( WIN32 )
endif( NOT VISTA_HWARCH )